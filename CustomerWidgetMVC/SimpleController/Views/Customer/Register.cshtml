@model SimpleController.Models.Customer

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/loginstyle.css">
<style>
    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }

    div {
        font-size: 0.8rem;
    }

    .errorClass {
        border: 1px solid red;
    }

    /*select.input-validation-error {
            border-color: red
        }*/

</style>

<div class="container center">
    <div class="logincard">
        <div class="form-group" style="display: flex; justify-content: center; flex-direction: row;">
            <i class="fa fa-car" aria-hidden="true" style="font-size: 35px;"></i>
            &nbsp;&nbsp;
            <h3>
                Customer Widget
            </h3>
        </div>
        <div class="text-success">
            @TempData["msg"]
        </div>
        @*<p style="color:red;">
            @{
                if (TempData["Errormsg"] != null)
                {
                    @TempData["Errormsg"]
                    TempData.Keep("Errormsg");
                }
            }
        </p>*@

        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.CustomerId)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <form method="post" onsubmit="return login()">

            <div class="form-group">
                <label for="exampleInputEmail1" class="required">Email address</label>
                <input type="text" name="Email" class="form-control" id="Email1" aria-describedby="emailHelp">
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1" class="required">Password</label>
                <input type="password" name="Password" class="form-control" id="Password1">
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                Don't have an account?  <a href="#exampleModal" data-toggle="modal">Register Here</a><br />
                @Html.ActionLink("Forget Password", "ForgotPassword")
            </div>
            @*<a href="./carList.html" type="submit" class="btn btn-primary">Submit</a>*@
            @*<input type="button" value="Submit" class="btn btn-primary" onclick="return login();" />*@
            <input type="text" id="passval" name="passval" hidden /><br />
            @*<input type="text" id= "CustomerId" value=@Model.CustomerId name="CustomerId" hidden />*@<br />
            <input type="submit" value="Login" class="btn btn-primary" />
        </form>
    </div>
</div>
@*@string sessionId = "";

@CookieHeaderValue cookie = Request.Headers.GetCookies("session-id").FirstOrDefault();
if (cookie != null)
{
    sessionId = cookie["session-id"].Value;
}*@


<!-- Register Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Register Here</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", id = "FirstName"} })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", id = "LastName"} })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "Email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                <label id="DuplicateEmail" style="color:red"  />
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ContactNo, "Phone Number", htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", id = "ContactNo", type = "text" } })
                                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, "Address Line 1", htmlAttributes: new { @class = "control-label required" })
                        <div>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control col-md-12", id = "Address" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputAddress2">Address Line 2</label>
                        <input type="text" class="form-control col-md-12" id="inputAddress2" >
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-5">
                            <label for="inputCity" class="required">City</label>
                            <input type="text" class="form-control required" id="inputCity">
                        </div>
                        <div class="form-group col-md-4">
                            <label for="inputState" class="required">State</label>
                            <select id="inputState" class="form-control required">
                                <option selected>Select State</option>
                                <option value="Andhra Pradesh">Andhra Pradesh</option>
                                <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
                                <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                                <option value="Assam">Assam</option>
                                <option value="Bihar">Bihar</option>
                                <option value="Chandigarh">Chandigarh</option>
                                <option value="Chhattisgarh">Chhattisgarh</option>
                                <option value="Dadar and Nagar Haveli">Dadar and Nagar Haveli</option>
                                <option value="Daman and Diu">Daman and Diu</option>
                                <option value="Delhi">Delhi</option>
                                <option value="Lakshadweep">Lakshadweep</option>
                                <option value="Puducherry">Puducherry</option>
                                <option value="Goa">Goa</option>
                                <option value="Gujarat">Gujarat</option>
                                <option value="Haryana">Haryana</option>
                                <option value="Himachal Pradesh">Himachal Pradesh</option>
                                <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                                <option value="Jharkhand">Jharkhand</option>
                                <option value="Karnataka">Karnataka</option>
                                <option value="Kerala">Kerala</option>
                                <option value="Madhya Pradesh">Madhya Pradesh</option>
                                <option value="Maharashtra">Maharashtra</option>
                                <option value="Manipur">Manipur</option>
                                <option value="Meghalaya">Meghalaya</option>
                                <option value="Mizoram">Mizoram</option>
                                <option value="Nagaland">Nagaland</option>
                                <option value="Odisha">Odisha</option>
                                <option value="Punjab">Punjab</option>
                                <option value="Rajasthan">Rajasthan</option>
                                <option value="Sikkim">Sikkim</option>
                                <option value="Tamil Nadu">Tamil Nadu</option>
                                <option value="Telangana">Telangana</option>
                                <option value="Tripura">Tripura</option>
                                <option value="Uttar Pradesh">Uttar Pradesh</option>
                                <option value="Uttarakhand">Uttarakhand</option>
                                <option value="West Bengal">West Bengal</option>
                            </select>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="inputZip" class="required">Zip</label>
                            <input type="text" class="form-control" id="inputZip">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">

                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "Password", type = "password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputConfirmPassword4" class="control-label required">Confirm Password</label>
                            <input type="password" class="form-control " id="inputConfirmPassword" >
                            @*@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="d-flex justify-content-center" id="loader">
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <input type="button" value="Create" class="btn btn-primary" onclick="return register();" />
                
            </div>
        </div>
    </div>
</div>

@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="~/Scripts/bootstrap.min.js"></script>

<script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/md5.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/RegisterValidation.js"></script>






